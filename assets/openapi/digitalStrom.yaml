openapi: 3.0.1
info:
  title: dSS API
  description: dSS Server JSON Interface
  contact:
    email: xgcssch@github.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.6.0
externalDocs:
  description: dSS Json API Documentation
  url: http://developer.digitalstrom.org/Architecture/v1.6/system-json/dss-json.pdf
servers:
  - url: https://dss.acme.com:8080/json
tags:
  - name: System
    description: dSS System information
  - name: Authentication
    description: dSS Authentication
  - name: Property
    description: Access to the property tree
  - name: Apartment
    description: Access to items in the apartment
  - name: Zone
    description: Access to items a specific zone
  - name: Device
    description: Access to individual devices
  - name: Event
    description: Access to the event system
paths:
  /event/subscribe:
    get:
      tags:
        - Event
      summary:
        Subscribe to an event with the given name and registers the callers
        subscriptionId. A unique subscriptionId can be selected by the subscriber.
        It is possible to subscribe to several events reusing the same subscriptionId.
      operationId: subscribe
      parameters:
        - name: name
          in: query
          description: identifier string for the event
          required: true
          schema:
            type: string
        - name: subscriptionID
          in: query
          description: numerical unique value
          required: true
          schema:
            type: integer
      responses:
        200:
          description: successfully subscribed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /event/unsubscribe:
    get:
      tags:
        - Event
      summary:
        Unsubscribes for the previously registered events by giving the event
        name and the unique subscriptionId.
      operationId: unsubscribe
      parameters:
        - name: name
          in: query
          description: identifier string for the event
          required: true
          schema:
            type: string
        - name: subscriptionID
          in: query
          description: numerical unique value
          required: true
          schema:
            type: integer
      responses:
        200:
          description: successfully unsubscribed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /event/get:
    get:
      tags:
        - Event
      summary:
        Get event and context information for an event subscription. All events
        subscribed with the given Id will be handled by this call. An optional timeout
        value in milliseconds can be specified and will block the call until either
        an event or the timeout occurs. If the timeout value is zero or missing the
        call will not timeout.
      operationId: get
      parameters:
        - name: subscriptionID
          in: query
          description: numerical unique value
          required: true
          schema:
            type: integer
        - name: timeout
          in: query
          description: numerical unique value
          schema:
            type: integer
      responses:
        200:
          description: successfully received events
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  result:
                    type: object
                    properties:
                      events:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            properties:
                              type: object
                              properties:
                                callOrigin:
                                  type: string
                                groupID:
                                  type: string
                                sceneID:
                                  type: string
                                zoneID:
                                  type: string
                                originDSUID:
                                  type: string
                                originToken:
                                  type: string
                                buttonIndex:
                                  type: string
                                clickType:
                                  type: string
                            source:
                              type: object
                              properties:
                                set:
                                  type: string
                                dsid:
                                  type: string
                                groupID:
                                  type: integer
                                zoneID:
                                  type: integer
                                isApartment:
                                  type: boolean
                                isGroup:
                                  type: boolean
                                isDevice:
                                  type: boolean
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /device/turnOn:
    get:
      tags:
        - Device
      summary: Tells devices to execute the scene MAX.
      operationId: turnOn
      parameters:
        - name: dsid
          in: query
          description: dsid of the device
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfully set MAX
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /device/turnOff:
    get:
      tags:
        - Device
      summary: Tells devices to execute the scene MIN.
      operationId: turnOff
      parameters:
        - name: dsid
          in: query
          description: dsid of the device
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfully set MIN
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /device/increaseValue:
    get:
      tags:
        - Device
      summary: Tells devices to execute the scene INC.
      operationId: increaseValue
      parameters:
        - name: dsid
          in: query
          description: dsid of the device
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfully increased value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /device/decreaseValue:
    get:
      tags:
        - Device
      summary: Tells devices to execute the scene DEC.
      operationId: decreaseValue
      parameters:
        - name: dsid
          in: query
          description: dsid of the device
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfully decreased value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /apartment/setValue:
    get:
      tags:
        - Apartment
      summary: Set the output value of a group of devices to a given value.
      operationId: setValue
      parameters:
        - name: value
          in: query
          description: Numerical value
          required: true
          schema:
            type: integer
        - name: groupID
          in: query
          description: Number of the target group
          schema:
            type: integer
        - name: groupName
          in: query
          description: Name of the target group
          schema:
            type: string
      responses:
        200:
          description: successfully set value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /apartment/callScene:
    get:
      tags:
        - Apartment
      summary: Excutes the scene sceneNumber on a group of devices.
      operationId: ApartmentCallScene
      parameters:
        - name: sceneNumber
          in: query
          description: Numerical value
          required: true
          schema:
            type: integer
        - name: groupID
          in: query
          description: Number of the target group
          schema:
            type: integer
        - name: groupName
          in: query
          description: Name of the target group
          schema:
            type: string
        - name: force
          in: query
          description: Boolean value, if set a forced scene call is issued
          schema:
            type: boolean
      responses:
        200:
          description: successfully set value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /apartment/getStructure:
    get:
      tags:
        - Apartment
      summary:
        Returns an object containing the structure of the apartment. This includes
        detailed information about all zones, groups and devices.
      operationId: getStructure
      responses:
        200:
          description: successfully retrieved Structure
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  result:
                    type: object
                    properties:
                      apartment:
                        type: object
                        properties:
                          clusters:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                                devices:
                                  type: array
                                  items:
                                    type: string
                          floors:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                                zones:
                                  type: array
                                  items:
                                    type: integer
                          zones:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                                isPresent:
                                  type: boolean
                                floorId:
                                  type: integer
                                devices:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        type: string
                                      DisplayID:
                                        type: string
                                      dSUID:
                                        type: string
                                      name:
                                        type: string
                                      groups:
                                        type: array
                                        items:
                                          type: integer
                                      sensors:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            type:
                                              type: integer
                                            valid:
                                              type: boolean
                                            value:
                                              type: number
                                              format: double
                                      outputChannels:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            channelId:
                                              type: string
                                            channelType:
                                              type: string
                                            channelIndex:
                                              type: integer
                                            channelName:
                                              type: string
                                groups:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        type: string
                                      name:
                                        type: string
                                      applicationType:
                                        type: integer
                                      devices:
                                        type: array
                                        items:
                                          type: string
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /zone/callScene:
    get:
      tags:
        - Zone
      summary: Excutes the scene sceneNumber in a zone for a group of devices.
      operationId: ZoneCallScene
      parameters:
        - name: sceneNumber
          in: query
          description: Numerical value
          required: true
          schema:
            type: integer
        - name: id
          in: query
          description: Number of the target zone
          schema:
            type: integer
        - name: groupID
          in: query
          description: Number of the target group
          schema:
            type: integer
        - name: groupName
          in: query
          description: Name of the target group
          schema:
            type: string
        - name: force
          in: query
          description: Boolean value, if set a forced scene call is issued
          schema:
            type: boolean
      responses:
        200:
          description: successfully set value
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /system/version:
    get:
      tags:
        - System
      summary: Gets the server version information
      operationId: version
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  result:
                    type: object
                    properties:
                      version:
                        type: string
                        description: the dSS application version
                      distroVersion:
                        type: string
                        description: the host platform firmware release (since v1.10)
                      Hardware:
                        type: string
                        description:
                          the host platform hardware identifier (since
                          v1.10)
                      Revision:
                        type: string
                        description:
                          the host platform hardware revision number (since
                          v1.10)
                      Serial:
                        type: string
                        description:
                          the host platform hardware serial number (since
                          v1.10)
                      Ethernet:
                        type: string
                        description: the host platform IEEE Mac address (since v1.10)
                      MachineID:
                        type: string
                        description: the host system unique id (since v1.10)
                      Kernel:
                        type: string
                        description:
                          the host system Linux kernel release string (since
                          v1.10)
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /system/time:
    get:
      tags:
        - System
      summary: Gets the installation time
      operationId: time
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  result:
                    type: object
                    properties:
                      time:
                        type: integer
                        description:
                          number of seconds since the Epoch, 1970-01-01
                          00:00:00 +0000 (UTC)
                        format: int64
                      offset:
                        type: integer
                        description: offset in seconds east to GMT
                        format: int64
                      daylight:
                        type: boolean
                        description:
                          boolean flag indicating if daylight saving is
                          currently active
                      timezone:
                        type: string
                        description: timezone description string
  /system/getDSID:
    get:
      tags:
        - System
      summary: Returns the dSUID and dSID of the digitalSTROM Server.
      operationId: getDSID
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Status"
                  - type: object
                    properties:
                      result:
                        type: object
                        properties:
                          dSID:
                            type: string
                            description: dSID = SGTIN-96 of the dSS
                          dSUID:
                            type: string
                            description: dSUID of the dSS
  /system/login:
    get:
      tags:
        - Authentication
      summary: Creates a new session using the provided credentials.
      operationId: login
      parameters:
        - name: user
          in: query
          description: user name string
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: password string
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionTokenResponse"
  /system/logout:
    get:
      tags:
        - Authentication
      summary: Destroys the session and signs out the user.
      operationId: logout
      responses:
        200:
          description: successfuly logged out
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /system/loggedInUser:
    get:
      tags:
        - Authentication
      summary: Returns the name of the currently logged in user.
      operationId: loggedInUser
      responses:
        200:
          description: successfuly logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  result:
                    type: object
                    properties:
                      name:
                        type: string
                        description: name of the currently logged in user
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /system/requestApplicationToken:
    get:
      tags:
        - Authentication
      summary: Creates a new session using the provided credentials.
      operationId: requestApplicationToken
      parameters:
        - name: applicationName
          in: query
          description: name of the application that requests the token
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful token generated
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Status"
                  - type: object
                    properties:
                      result:
                        type: object
                        "required": ["applicationToken"]
                        properties:
                          applicationToken:
                            type: string
                            description: application token as string
  /system/enableToken:
    get:
      tags:
        - Authentication
      summary: Enables an application token, caller must be logged in.
      operationId: enableToken
      parameters:
        - name: applicationToken
          in: query
          description: application token as string
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfuly enabled token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /system/revokeToken:
    get:
      tags:
        - Authentication
      summary: Revokes an application token, caller must be logged in.
      operationId: revokeToken
      parameters:
        - name: applicationToken
          in: query
          description: application token as string
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfuly revoked token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /system/loginApplication:
    get:
      tags:
        - Authentication
      summary: Creates a new session using the registered application token.
      operationId: loginApplication
      parameters:
        - name: loginToken
          in: query
          description: application token as string
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionTokenResponse"
  /property/getString:
    get:
      tags:
        - Property
      summary:
        Returns the string value of the property, this call will fail if the
        property is not of type ’string’.
      operationId: getString
      parameters:
        - name: path
          in: query
          description: path of the property
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfully retrieved string
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  result:
                    type: object
                    properties:
                      value:
                        type: string
                        description: string value of the property
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /property/setString:
    get:
      tags:
        - Property
      summary:
        Sets the string value of the property, this call will fail if the property
        is not of type ’string’.
      operationId: setString
      parameters:
        - name: path
          in: query
          description: path of the property
          required: true
          schema:
            type: string
        - name: value
          in: query
          description: string value to set
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfully set string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /property/getInteger:
    get:
      tags:
        - Property
      summary:
        Returns the integer value of the property, this call will fail if the
        property is not of type ’integer’.
      operationId: getInteger
      parameters:
        - name: path
          in: query
          description: path of the property
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfully retrieved integer
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  result:
                    type: object
                    properties:
                      value:
                        type: integer
                        description: integer value of the property
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /property/setInteger:
    get:
      tags:
        - Property
      summary:
        Sets the integer value of the property, this call will fail if the
        property is not of type ’integer’.
      operationId: setInteger
      parameters:
        - name: path
          in: query
          description: path of the property
          required: true
          schema:
            type: string
        - name: value
          in: query
          description: integer value to set
          required: true
          schema:
            type: integer
      responses:
        200:
          description: successfully set integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /property/getBoolean:
    get:
      tags:
        - Property
      summary:
        Returns the boolean value of the property, this call will fail if the
        property is not of type ’boolean’.
      operationId: getBoolean
      parameters:
        - name: path
          in: query
          description: path of the property
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfully retrieved boolean
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  result:
                    type: object
                    properties:
                      value:
                        type: boolean
                        description: boolean value of the property
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /property/setBoolean:
    get:
      tags:
        - Property
      summary:
        Sets the boolean value of the property, this call will fail if the
        property is not of type ’boolean’.
      operationId: setBoolean
      parameters:
        - name: path
          in: query
          description: path of the property
          required: true
          schema:
            type: string
        - name: value
          in: query
          description: boolean value to set
          required: true
          schema:
            type: boolean
      responses:
        200:
          description: successfully set boolean
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /property/getChildren:
    get:
      tags:
        - Property
      summary: Returns an array of child nodes.
      operationId: getChildren
      parameters:
        - name: path
          in: query
          description: path of the property
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfully retrieved string
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: name of the childnode
                        type:
                          type: string
                          description: type of the childnode
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /property/getType:
    get:
      tags:
        - Property
      summary:
        Returns the type of the property, this can be “none”, “string”, “integer”
        or “boolean”.
      operationId: getType
      parameters:
        - name: path
          in: query
          description: path of the property
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfully retrieved type
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  result:
                    type: object
                    properties:
                      type:
                        type: string
                        description: type of the property
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /property/getFlags:
    get:
      tags:
        - Property
      summary: Returns the flag values of a property.
      operationId: getFlags
      parameters:
        - name: path
          in: query
          description: path of the property
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfully retrieved flags
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  result:
                    type: object
                    properties:
                      READABLE:
                        type: boolean
                        description: information about the READABLE flag
                      WRITEABLE:
                        type: boolean
                        description: information about the WRITEABLE flag
                      ARCHIVE:
                        type: boolean
                        description: information about the ARCHIVE flag
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /property/setFlags:
    get:
      tags:
        - Property
      summary: Sets a given flag of a property.
      operationId: setFlags
      parameters:
        - name: path
          in: query
          description: path of the property
          required: true
          schema:
            type: string
        - name: flag
          in: query
          description: flag identifier
          required: true
          schema:
            type: string
            enum:
              - READABLE
              - WRITEABLE
              - ARCHIVE
        - name: value
          in: query
          description: boolean flag value
          required: true
          schema:
            type: boolean
      responses:
        200:
          description: successfully set boolean
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /property/remove:
    get:
      tags:
        - Property
      summary: Removes a property node.
      operationId: remove
      parameters:
        - name: path
          in: query
          description: path of the property
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfully removed property
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
  /property/query2:
    get:
      tags:
        - Property
      summary: Returns a part of the tree specified by query.
      description:
        "All queries start from the root. The properties to be included
        have to be put in parentheses. A query to get all device from zone4 would
        look like this: ’/apartment/ zones/zone4/*(ZoneID,name)’. More complex combinations
        (see example below) are also possible."
      operationId: query2
      parameters:
        - name: query
          in: query
          description: query string
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfully executed query
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  result:
                    type: object
                    properties: {}
        "403":
          description: Invalid authentication provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
      security:
        - api_key: []
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: token
      in: query
  schemas:
    Status:
      type: object
      "required": ["ok"]
      properties:
        ok:
          type: boolean
        message:
          type: string
    SessionTokenResponse:
      allOf:
        - $ref: "#/components/schemas/Status"
        - type: object
          properties:
            result:
              type: object
              "required": ["token"]
              properties:
                token:
                  type: string
                  description: session token as string
